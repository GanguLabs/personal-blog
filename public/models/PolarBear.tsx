/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    PolarBear_1: THREE.Mesh
    PolarBear_2: THREE.Mesh
    PolarBear_3: THREE.Mesh
  }
  materials: {
    Peluches_escandalosospolySurface35SG1: THREE.MeshStandardMaterial
    Peluches_escandalosospolySurface11SG: THREE.MeshStandardMaterial
    Peluches_escandalosospolySurface21SG1: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/PolarBear-transformed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[-2.33, -1.96, -0.09]}>
          <group position={[2.43, 1.96, 0.12]}>
            <mesh geometry={nodes.PolarBear_1.geometry} material={materials.Peluches_escandalosospolySurface35SG1} />
            <mesh geometry={nodes.PolarBear_2.geometry} material={materials.Peluches_escandalosospolySurface11SG} />
            <mesh geometry={nodes.PolarBear_3.geometry} material={materials.Peluches_escandalosospolySurface21SG1} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/PolarBear-transformed.glb')
